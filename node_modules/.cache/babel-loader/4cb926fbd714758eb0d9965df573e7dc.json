{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/trybe-wallet/sd-07-project-trybewallet/src/pages/Wallet.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport ExpenseForm from \"../components/ExpenseForm\"; // import Table from \"../components/Table\";\n\nimport * as actions from '../actions/index';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      total: 0,\n      isLoading: false\n    };\n  }\n\n  sum() {\n    const {\n      expenses\n    } = this.props;\n    const totalExpenses = expenses.reduce((acc, curr) => parseFloat(acc) + parseFloat(curr.value) * parseFloat(curr.exchangeRates[curr.currency].ask), 0);\n    this.setState({\n      total: totalExpenses\n    });\n  } // componentDidMount() {\n  //   const { dispatch, loadCurrencies } = this.props;\n  //   // this.setState({\n  //   //   isLoading: true,\n  //   // }, async () => {\n  //   //   const data = loadCurrencies();\n  //   //   this.setState({\n  //   //     moedas: [data]\n  //   //   })\n  //   // })\n  //   loadCurrencies();\n  // }\n\n\n  render() {\n    const {\n      email,\n      currencies,\n      expenses,\n      total\n    } = this.props; // const { moedas } = this.state;\n\n    console.log(currencies);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"Bem vindo\", /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }\n    }, email)), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Gastos totais R$\", /*#__PURE__*/React.createElement(\"p\", {\n      Adicione: true,\n      o: true,\n      atributo: true,\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, 0 + total)), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Seus gastos est\\xE3o sendo convertidos para\", \" \", /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"BRL\"))), /*#__PURE__*/React.createElement(ExpenseForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  total: state.wallet.total\n}); // const mapDispatchToProps = (dispatch) => ({\n//   loadCurrencies: () => dispatch(actions.fetchCurrencies()),\n// });\n\n\nexport default connect(mapStateToProps)(Wallet);","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/trybe-wallet/sd-07-project-trybewallet/src/pages/Wallet.js"],"names":["React","connect","ExpenseForm","actions","Wallet","Component","constructor","state","total","isLoading","sum","expenses","props","totalExpenses","reduce","acc","curr","parseFloat","value","exchangeRates","currency","ask","setState","render","email","currencies","console","log","mapStateToProps","user","wallet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAMC,KAAN,GAAc;AACZC,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,SAAS,EAAE;AAFC,KAAd;AAID;;AAEDC,EAAAA,GAAG,GAAG;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAMC,aAAa,GAAGF,QAAQ,CAACG,MAAT,CAAgB,CAACC,GAAD,EAAMC,IAAN,KACpCC,UAAU,CAACF,GAAD,CAAV,GAAmBE,UAAU,CAACD,IAAI,CAACE,KAAN,CAAV,GAAyBD,UAAU,CAACD,IAAI,CAACG,aAAL,CAAmBH,IAAI,CAACI,QAAxB,EAAkCC,GAAnC,CADlC,EAEnB,CAFmB,CAAtB;AAGA,SAAKC,QAAL,CAAc;AACZd,MAAAA,KAAK,EAAEK;AADK,KAAd;AAGD,GAjBkC,CAkBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,UAAT;AAAqBd,MAAAA,QAArB;AAA+BH,MAAAA;AAA/B,QAAyC,KAAKI,KAApD,CADO,CAEP;;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACW;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BD,KAA9B,CADX,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AAAG,MAAA,QAAQ,MAAX;AAAY,MAAA,CAAC,MAAb;AAAc,MAAA,QAAQ,MAAtB;AAAuB,qBAAY,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,IAAIhB,KADL,CAFF,CAJF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAC2C,GAD3C,eAEE;AAAG,qBAAY,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAVF,CADF,eAgBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADF;AAqBD;;AAvDkC;;AA0DrC,MAAMoB,eAAe,GAAIrB,KAAD,KAAY;AAClCiB,EAAAA,KAAK,EAAEjB,KAAK,CAACsB,IAAN,CAAWL,KADgB;AAElCC,EAAAA,UAAU,EAAElB,KAAK,CAACuB,MAAN,CAAaL,UAFS;AAGlCd,EAAAA,QAAQ,EAAEJ,KAAK,CAACuB,MAAN,CAAanB,QAHW;AAIlCH,EAAAA,KAAK,EAAED,KAAK,CAACuB,MAAN,CAAatB;AAJc,CAAZ,CAAxB,C,CAOA;AACA;AACA;;;AAEA,eAAeP,OAAO,CAAC2B,eAAD,CAAP,CAAyBxB,MAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ExpenseForm from \"../components/ExpenseForm\";\n// import Table from \"../components/Table\";\nimport * as actions from '../actions/index';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this. state = {\n      total: 0,\n      isLoading: false,\n    }\n  }\n\n  sum() {\n    const { expenses } = this.props;\n    const totalExpenses = expenses.reduce((acc, curr) => (\n      parseFloat(acc) + (parseFloat(curr.value) * parseFloat(curr.exchangeRates[curr.currency].ask))\n    ), 0);\n    this.setState({\n      total: totalExpenses,\n    });\n  }\n  // componentDidMount() {\n  //   const { dispatch, loadCurrencies } = this.props;\n  //   // this.setState({\n  //   //   isLoading: true,\n  //   // }, async () => {\n  //   //   const data = loadCurrencies();\n  //   //   this.setState({\n  //   //     moedas: [data]\n  //   //   })\n  //   // })\n  //   loadCurrencies();\n  // }\n  render() {\n    const { email, currencies, expenses, total } = this.props;\n    // const { moedas } = this.state;\n    console.log(currencies);\n    return (\n      <div>\n        <header>\n          <section>\n            Bem vindo<p data-testid=\"email-field\">{email}</p>\n          </section>\n          <section>\n            Gastos totais R$ \n            <p Adicione o atributo data-testid=\"total-field\">\n            {0 + total}\n            </p>\n          </section>\n          <section>\n            Seus gastos est√£o sendo convertidos para{\" \"}\n            <p data-testid=\"header-currency-field\">BRL</p>\n          </section>\n        </header>\n        <ExpenseForm />\n        {/* <Table /> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  total: state.wallet.total,\n});\n\n// const mapDispatchToProps = (dispatch) => ({\n//   loadCurrencies: () => dispatch(actions.fetchCurrencies()),\n// });\n\nexport default connect(mapStateToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}