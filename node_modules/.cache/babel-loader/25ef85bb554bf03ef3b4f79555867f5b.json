{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport initialState from './initialState';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isLoading: false,\n  controlId: 0,\n  exchangeRates: {}\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      action.expenses.id = expenses.length;\n      return { ...state,\n        expenses: [...state.expenses, action.expenses]\n      };\n\n    case 'FETCH_SUCCESS':\n      // const keys = Object.keys(action.payload);\n      // const values = Object.values(action.payload);\n      // const arrayResult = []\n      // keys.map((teste, index) => {\n      //   const object = {teste: values[index]};\n      //   arrayResult[index] = object;\n      // })\n      return { ...state,\n        currencies: Object.keys(action.payload).map(i => action.payload[i]),\n        exchangeRates: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default walletReducer;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/trybe-wallet/sd-07-project-trybewallet/src/reducers/wallet.js"],"names":["initialState","INITIAL_STATE","currencies","expenses","isLoading","controlId","exchangeRates","walletReducer","state","action","type","id","length","Object","keys","payload","map","i"],"mappings":"AAAA;AACA,OAAOA,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,SAAS,EAAE,KAHS;AAIpBC,EAAAA,SAAS,EAAE,CAJS;AAKpBC,EAAAA,aAAa,EAAE;AALK,CAAtB;;AAQA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAK,QAAL;AACED,MAAAA,MAAM,CAACN,QAAP,CAAgBQ,EAAhB,GAAqBR,QAAQ,CAACS,MAA9B;AACA,aAAO,EAAE,GAAGJ,KAAL;AAAYL,QAAAA,QAAQ,EAAE,CAAC,GAAGK,KAAK,CAACL,QAAV,EAAoBM,MAAM,CAACN,QAA3B;AAAtB,OAAP;;AACF,SAAK,eAAL;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAO,EAAE,GAAGK,KAAL;AAAYN,QAAAA,UAAU,EAAEW,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACM,OAAnB,EAA4BC,GAA5B,CAAgCC,CAAC,IAAIR,MAAM,CAACM,OAAP,CAAeE,CAAf,CAArC,CAAxB;AAAiFX,QAAAA,aAAa,EAAEG,MAAM,CAACM;AAAvG,OAAP;;AACF;AACE,aAAOP,KAAP;AAdF;AAgBD,CAjBD;;AAmBA,eAAeD,aAAf","sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport initialState from './initialState';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  isLoading: false,\n  controlId: 0,\n  exchangeRates: {},\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'CHANGE':\n    action.expenses.id = expenses.length;\n    return { ...state, expenses: [...state.expenses, action.expenses] };\n  case 'FETCH_SUCCESS':\n    // const keys = Object.keys(action.payload);\n    // const values = Object.values(action.payload);\n    // const arrayResult = []\n    // keys.map((teste, index) => {\n    //   const object = {teste: values[index]};\n    //   arrayResult[index] = object;\n    // })\n    return { ...state, currencies: Object.keys(action.payload).map(i => action.payload[i]), exchangeRates: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n"]},"metadata":{},"sourceType":"module"}