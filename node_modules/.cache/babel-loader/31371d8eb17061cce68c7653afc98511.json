{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/trybe-wallet/sd-07-project-trybewallet/src/pages/Wallet.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport ExpenseForm from \"../components/ExpenseForm\"; // import Table from \"../components/Table\";\n\nimport * as actions from '../actions/index';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalExpense: 0,\n      isLoading: false\n    };\n  }\n\n  sum() {\n    const {\n      expenses\n    } = this.props;\n    const values = expenses.map(expense => parseFloat(expense.value));\n    const total = values.reduce((acc, current) => acc + current);\n    this.setState({\n      totalExpense: total\n    });\n  } // componentDidMount() {\n  //   const { dispatch, loadCurrencies } = this.props;\n  //   // this.setState({\n  //   //   isLoading: true,\n  //   // }, async () => {\n  //   //   const data = loadCurrencies();\n  //   //   this.setState({\n  //   //     moedas: [data]\n  //   //   })\n  //   // })\n  //   loadCurrencies();\n  // }\n\n\n  render() {\n    const {\n      totalExpense\n    } = this.state;\n    const {\n      email,\n      loadCurrencies,\n      currencies,\n      expenses\n    } = this.props; // const { moedas } = this.state;\n\n    console.log(currencies);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"Bem vindo\", /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }\n    }, email)), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Gastos totais R$\", parseFloat(expenses.length), /*#__PURE__*/React.createElement(\"p\", {\n      Adicione: true,\n      o: true,\n      atributo: true,\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"0\")), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Seus gastos est\\xE3o sendo convertidos para\", \" \", /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"BRL\"))), /*#__PURE__*/React.createElement(ExpenseForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses\n}); // const mapDispatchToProps = (dispatch) => ({\n//   loadCurrencies: () => dispatch(actions.fetchCurrencies()),\n// });\n\n\nexport default connect(mapStateToProps)(Wallet);","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/trybe-wallet/sd-07-project-trybewallet/src/pages/Wallet.js"],"names":["React","connect","ExpenseForm","actions","Wallet","Component","constructor","state","totalExpense","isLoading","sum","expenses","props","values","map","expense","parseFloat","value","total","reduce","acc","current","setState","render","email","loadCurrencies","currencies","console","log","length","mapStateToProps","user","wallet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAMC,KAAN,GAAc;AACZC,MAAAA,YAAY,EAAE,CADF;AAEZC,MAAAA,SAAS,EAAE;AAFC,KAAd;AAID;;AAEDC,EAAAA,GAAG,GAAG;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAMC,MAAM,GAAGF,QAAQ,CAACG,GAAT,CAAcC,OAAO,IAAIC,UAAU,CAACD,OAAO,CAACE,KAAT,CAAnC,CAAf;AACA,UAAMC,KAAK,GAAGL,MAAM,CAACM,MAAP,CAAc,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,GAAGC,OAAtC,CAAd;AACA,SAAKC,QAAL,CAAc;AACZd,MAAAA,YAAY,EAAEU;AADF,KAAd;AAGD,GAhBkC,CAiBnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA;AAAF,QAAmB,KAAKD,KAA9B;AACA,UAAM;AAAEiB,MAAAA,KAAF;AAASC,MAAAA,cAAT;AAAyBC,MAAAA,UAAzB;AAAqCf,MAAAA;AAArC,QAAkD,KAAKC,KAA7D,CAFO,CAGP;;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACW;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BF,KAA9B,CADX,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACmBR,UAAU,CAACL,QAAQ,CAACkB,MAAV,CAD7B,eAEE;AAAG,MAAA,QAAQ,MAAX;AAAY,MAAA,CAAC,MAAb;AAAc,MAAA,QAAQ,MAAtB;AAAuB,qBAAY,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CAJF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAC2C,GAD3C,eAEE;AAAG,qBAAY,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAVF,CADF,eAgBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADF;AAqBD;;AAvDkC;;AA0DrC,MAAMC,eAAe,GAAIvB,KAAD,KAAY;AAClCiB,EAAAA,KAAK,EAAEjB,KAAK,CAACwB,IAAN,CAAWP,KADgB;AAElCE,EAAAA,UAAU,EAAEnB,KAAK,CAACyB,MAAN,CAAaN,UAFS;AAGlCf,EAAAA,QAAQ,EAAEJ,KAAK,CAACyB,MAAN,CAAarB;AAHW,CAAZ,CAAxB,C,CAMA;AACA;AACA;;;AAEA,eAAeV,OAAO,CAAC6B,eAAD,CAAP,CAAyB1B,MAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ExpenseForm from \"../components/ExpenseForm\";\n// import Table from \"../components/Table\";\nimport * as actions from '../actions/index';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this. state = {\n      totalExpense: 0,\n      isLoading: false,\n    }\n  }\n\n  sum() {\n    const { expenses } = this.props;\n    const values = expenses.map((expense => parseFloat(expense.value)));\n    const total = values.reduce((acc, current) => acc + current);\n    this.setState({\n      totalExpense: total,\n    });\n  }\n  // componentDidMount() {\n  //   const { dispatch, loadCurrencies } = this.props;\n  //   // this.setState({\n  //   //   isLoading: true,\n  //   // }, async () => {\n  //   //   const data = loadCurrencies();\n  //   //   this.setState({\n  //   //     moedas: [data]\n  //   //   })\n  //   // })\n  //   loadCurrencies();\n  // }\n  render() {\n    const { totalExpense } = this.state;\n    const { email, loadCurrencies, currencies, expenses } = this.props;\n    // const { moedas } = this.state;\n    console.log(currencies);\n    return (\n      <div>\n        <header>\n          <section>\n            Bem vindo<p data-testid=\"email-field\">{email}</p>\n          </section>\n          <section>\n            Gastos totais R${parseFloat(expenses.length)}\n            <p Adicione o atributo data-testid=\"total-field\">\n              0\n            </p>\n          </section>\n          <section>\n            Seus gastos est√£o sendo convertidos para{\" \"}\n            <p data-testid=\"header-currency-field\">BRL</p>\n          </section>\n        </header>\n        <ExpenseForm />\n        {/* <Table /> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n});\n\n// const mapDispatchToProps = (dispatch) => ({\n//   loadCurrencies: () => dispatch(actions.fetchCurrencies()),\n// });\n\nexport default connect(mapStateToProps)(Wallet);\n"]},"metadata":{},"sourceType":"module"}