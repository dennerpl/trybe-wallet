{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/trybe-wallet/sd-07-project-trybewallet/src/components/ExpenseForm.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nclass ExpenseForm extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      currencies\n    } = this.props;\n    this.state = {\n      expense: [],\n      value: '',\n      description: '',\n      method: '',\n      currency: '',\n      tag: '',\n      exchangeRates: currencies\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      loadCurrencies\n    } = this.props; // this.setState({\n    //   isLoading: true,\n    // }, async () => {\n    //   const data = loadCurrencies();\n    //   this.setState({\n    //     moedas: [data]\n    //   })\n    // })\n\n    loadCurrencies();\n  }\n\n  handleChange(event) {\n    const {\n      target\n    } = event;\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    }, this.buttonValidation);\n  }\n\n  resetState() {\n    const {\n      currencies\n    } = this.props;\n    const filteredCurrencies = currencies.filter(filterCurrency => filterCurrency.codein != 'BRLT');\n    this.setState({\n      expense: [],\n      value: '',\n      description: '',\n      method: '',\n      currency: '',\n      tag: '',\n      exchangeRates: filteredCurrencies\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      expenses,\n      addExpenses,\n      loadCurrencies,\n      exchangeRates\n    } = this.props;\n    const {\n      value,\n      description,\n      method,\n      currency,\n      tag\n    } = this.state;\n    await loadCurrencies();\n    const {\n      currencies\n    } = this.props;\n    const filteredCurrencies = currencies.filter(filterCurrency => filterCurrency.codein != 'BRLT').sort();\n    this.setState({\n      expense: {\n        id: expenses.length,\n        value,\n        currency,\n        description,\n        method,\n        tag,\n        exchangeRates: exchangeRates\n      }\n    });\n    addExpenses(this.state.expense);\n    console.log(this.state.expense);\n    console.log(expenses);\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Valor da despesa\", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"value\",\n      \"data-testid\": \"value-input\",\n      placeholder: \"Digite seu despesa\",\n      id: \"value\",\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }))), \" \", /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o\"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"description\",\n      \"data-testid\": \"description-input\",\n      placeholder: \"Descri\\xE7\\xE3o da despesa\",\n      id: \"description\",\n      type: \"text\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency-input\",\n      \"data-testid\": \"currency-input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Moeda\", /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        marginLeft: 10\n      },\n      name: \"currency\",\n      onChange: this.handleChange,\n      id: \"currency-input\",\n      \"data-testid\": \"currency-input\",\n      value: this.state.currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, currencies.filter(filterCurrency => filterCurrency.codein != 'BRLT').map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      value: currency.code,\n      \"data-testid\": currency.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 103\n      }\n    })))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method-input\",\n      \"data-testid\": \"method-input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, \"Forma de pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        marginLeft: 10\n      },\n      name: \"method\",\n      onChange: this.handleChange,\n      id: \"method-input\",\n      \"data-testid\": \"method-input\",\n      value: this.state.method,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      \"data-testid\": \"method-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      \"data-testid\": \"method-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      \"data-testid\": \"method-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag-input\",\n      \"data-testid\": \"tag-input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, \"Categoria\", /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        marginLeft: 10\n      },\n      name: \"tag\",\n      onChange: this.handleChange,\n      id: \"tag-input\",\n      \"data-testid\": \"tag-input\",\n      value: this.state.tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      \"data-testid\": \"tag-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      \"data-testid\": \"tag-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      \"data-testid\": \"tag-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      \"data-testid\": \"tag-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      \"data-testid\": \"tag-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  exchangeRates: state.wallet.exchangeRates\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadCurrencies: () => dispatch(actions.fetchCurrencies()),\n  addExpenses: expense => dispatch(actions.addExpenses(expense))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/trybe-wallet/sd-07-project-trybewallet/src/components/ExpenseForm.js"],"names":["React","connect","actions","ExpenseForm","Component","constructor","props","currencies","state","expense","value","description","method","currency","tag","exchangeRates","handleChange","bind","handleSubmit","componentDidMount","loadCurrencies","event","target","name","setState","buttonValidation","resetState","filteredCurrencies","filter","filterCurrency","codein","preventDefault","expenses","addExpenses","sort","id","length","console","log","render","marginLeft","map","code","mapStateToProps","wallet","mapDispatchToProps","dispatch","fetchCurrencies"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nclass ExpenseForm extends React.Component {\n  constructor(props) {\n    super(props);\n    const { currencies } = this.props;\n    this.state = {\n      expense: [],\n      value: '',\n      description: '',\n      method: '',\n      currency: '',\n      tag: '',\n      exchangeRates: currencies,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { loadCurrencies } = this.props;\n    // this.setState({\n    //   isLoading: true,\n    // }, async () => {\n    //   const data = loadCurrencies();\n    //   this.setState({\n    //     moedas: [data]\n    //   })\n    // })\n    loadCurrencies();\n  }\n\n  handleChange(event) {\n    const { target } = event;\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, this.buttonValidation);\n  }\n\n  resetState() {\n    const { currencies } = this.props;\n    const filteredCurrencies = currencies.filter((filterCurrency) => filterCurrency.codein != 'BRLT')\n    this.setState({\n      expense: [],\n      value: '',\n      description: '',\n      method: '',\n      currency: '',\n      tag: '',\n      exchangeRates: filteredCurrencies,\n    })\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { expenses, addExpenses, loadCurrencies, exchangeRates } = this.props;\n    const { value, description, method, currency, tag } = this.state;\n    await loadCurrencies();\n    const { currencies } = this.props;\n    const filteredCurrencies = currencies.filter((filterCurrency) => filterCurrency.codein != 'BRLT').sort()\n    this.setState({\n      expense: {\n        id: expenses.length,\n        value,\n        currency,\n        description,\n        method,\n        tag,\n        exchangeRates: exchangeRates,\n      },\n    });\n    addExpenses(this.state.expense);\n    console.log(this.state.expense);\n    console.log(expenses);\n  }\n\n  render() {\n    const { currencies } = this.props;\n    return (\n      <div>\n        <form>\n          <label htmlFor=\"value\">\n            Valor da despesa\n            <div>\n              <input\n                name=\"value\"\n                data-testid=\"value-input\"\n                placeholder=\"Digite seu despesa\"\n                id=\"value\"\n                type=\"text\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              />\n            </div>\n          </label>{\" \"}\n          <label htmlFor=\"description\">Descrição</label>{\" \"}\n          <div>\n            <input\n              name=\"description\"\n              data-testid=\"description-input\"\n              placeholder=\"Descrição da despesa\"\n              id=\"description\"\n              type=\"text\"\n              value={this.state.description}\n              onChange={this.handleChange}\n            />\n          </div>\n          <label htmlFor=\"currency-input\" data-testid=\"currency-input-label\">\n            Moeda\n            <select\n              style={{ marginLeft: 10 }}\n              name=\"currency\"\n              onChange={this.handleChange}\n              id=\"currency-input\"\n              data-testid=\"currency-input\"\n              value={this.state.currency}\n            >\n            {currencies.filter((filterCurrency) => filterCurrency.codein != 'BRLT').map((currency) => <option value={currency.code} data-testid={currency.code} />)}\n            </select>\n          </label>\n          <label htmlFor=\"method-input\" data-testid=\"method-input-label\">\n            Forma de pagamento\n            <select\n              style={{ marginLeft: 10 }}\n              name=\"method\"\n              onChange={this.handleChange}\n              id=\"method-input\"\n              data-testid=\"method-input\"\n              value={this.state.method}\n            >\n              <option value=\"Dinheiro\" data-testid=\"method-option\">\n                Dinheiro\n              </option>\n              <option value=\"Cartão de crédito\" data-testid=\"method-option\">\n                Cartão de crédito\n              </option>\n              <option value=\"Cartão de débito\" data-testid=\"method-option\">\n                Cartão de débito\n              </option>\n            </select>\n          </label>\n          <label htmlFor=\"tag-input\" data-testid=\"tag-input-label\">\n            Categoria\n            <select\n              style={{ marginLeft: 10 }}\n              name=\"tag\"\n              onChange={this.handleChange}\n              id=\"tag-input\"\n              data-testid=\"tag-input\"\n              value={this.state.tag}\n            >\n              <option value=\"Alimentação\" data-testid=\"tag-option\">\n              Alimentação\n              </option>\n              <option value=\"Lazer\" data-testid=\"tag-option\">\n              Lazer\n              </option>\n              <option value=\"Trabalho\" data-testid=\"tag-option\">\n              Trabalho\n              </option>\n              <option value=\"Transporte\" data-testid=\"tag-option\">\n              Transporte\n              </option>\n              <option value=\"Saúde\" data-testid=\"tag-option\">\n              Saúde\n              </option>\n            </select>\n          </label>\n          <button\n            type=\"button\"\n            onClick={this.handleSubmit}\n          >\n            Adicionar despesa\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  exchangeRates: state.wallet.exchangeRates,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadCurrencies: () => dispatch(actions.fetchCurrencies()),\n  addExpenses: (expense) => dispatch(actions.addExpenses(expense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n"]},"metadata":{},"sourceType":"module"}