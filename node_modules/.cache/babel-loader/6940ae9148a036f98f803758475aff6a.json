{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/trybe-wallet/sd-07-project-trybewallet/src/components/ExpenseForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions/index';\n\nclass ExpenseForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: [],\n      value: '',\n      description: '',\n      method: '',\n      currency: '',\n      tag: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      loadCurrencies\n    } = this.props;\n    loadCurrencies();\n  }\n\n  handleChange(event) {\n    const {\n      target\n    } = event;\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    }, this.buttonValidation);\n  }\n\n  resetState() {\n    this.setState({\n      expense: [],\n      value: '',\n      description: '',\n      method: '',\n      currency: '',\n      tag: ''\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      expenses,\n      addExpenses,\n      loadCurrencies,\n      exchangeRates\n    } = this.props;\n    const {\n      value,\n      description,\n      method,\n      currency,\n      tag\n    } = this.state;\n    await loadCurrencies();\n    console.log(exchangeRates); // const { currencies } = this.props;\n    // const filteredCurrencies = currencies\n    //   .filter((filterCurrency) => filterCurrency.codein != \"BRLT\")\n    //   .sort();\n\n    this.setState({\n      expense: {\n        id: expenses.length,\n        value,\n        currency,\n        description,\n        method,\n        tag,\n        exchangeRates\n      }\n    });\n    const {\n      expense\n    } = this.state;\n    addExpenses(expense);\n    this.resetState();\n  }\n\n  render() {\n    const {\n      currencies\n    } = this.props;\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"Valor da despesa\", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"value\",\n      \"data-testid\": \"value-input\",\n      placeholder: \"Digite seu despesa\",\n      id: \"value\",\n      type: \"text\",\n      value: value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }))), ' ', /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"O que \\xE9?\", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"description\",\n      \"data-testid\": \"description-input\",\n      placeholder: \"Descri\\xE7\\xE3o da despesa\",\n      id: \"description\",\n      type: \"text\",\n      value: description,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }))), ' ', /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency-input\",\n      \"data-testid\": \"currency-input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Sigla\", /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        marginLeft: 10\n      },\n      name: \"currency\",\n      onChange: this.handleChange,\n      id: \"currency-input\",\n      \"data-testid\": \"currency-input\",\n      value: currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, currencies.filter(filterCurrency => filterCurrency.codein !== 'BRLT').map((currency, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: currency.code,\n      \"data-testid\": currency.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, currency.code)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method-input\",\n      \"data-testid\": \"method-input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, \"Forma de pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        marginLeft: 10\n      },\n      name: \"method\",\n      onChange: this.handleChange,\n      id: \"method-input\",\n      \"data-testid\": \"method-input\",\n      value: method,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      \"data-testid\": \"method-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      \"data-testid\": \"method-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      \"data-testid\": \"method-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag-input\",\n      \"data-testid\": \"tag-input-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, \"Categoria\", /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        marginLeft: 10\n      },\n      name: \"tag\",\n      onChange: this.handleChange,\n      id: \"tag-input\",\n      \"data-testid\": \"tag-input\",\n      value: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      \"data-testid\": \"tag-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      \"data-testid\": \"tag-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      \"data-testid\": \"tag-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      \"data-testid\": \"tag-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      \"data-testid\": \"tag-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  exchangeRates: state.wallet.exchangeRates\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadCurrencies: () => dispatch(actions.fetchCurrencies()),\n  addExpenses: expense => dispatch(actions.addExpenses(expense))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\nExpenseForm.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addExpenses: PropTypes.func.isRequired,\n  loadCurrencies: PropTypes.func.isRequired,\n  exchangeRates: PropTypes.arrayOf(PropTypes.string).isRequired\n}; // ExpensesForm.propTypes = {\n//   arrayCurrencyFiltered: PropTypes.arrayOf(PropTypes.string).isRequired,\n//   handlerChange: PropTypes.func.isRequired,\n//   handlerSubmit: PropTypes.func.isRequired,\n//   state: PropTypes.shape({\n//     expense: PropTypes.shape({\n//       value: PropTypes.number,\n//       description: PropTypes.string,\n//       currency: PropTypes.string,\n//       method: PropTypes.string,\n//       tag: PropTypes.string,\n//     }).isRequired,\n//   }).isRequired,\n// };","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/trybe-wallet/sd-07-project-trybewallet/src/components/ExpenseForm.js"],"names":["React","connect","PropTypes","actions","ExpenseForm","Component","constructor","props","state","expense","value","description","method","currency","tag","handleChange","bind","handleSubmit","componentDidMount","loadCurrencies","event","target","name","setState","buttonValidation","resetState","preventDefault","expenses","addExpenses","exchangeRates","console","log","id","length","render","currencies","marginLeft","filter","filterCurrency","codein","map","index","code","mapStateToProps","wallet","mapDispatchToProps","dispatch","fetchCurrencies","propTypes","arrayOf","object","isRequired","func","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions/index';\n\nclass ExpenseForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expense: [],\n      value: '',\n      description: '',\n      method: '',\n      currency: '',\n      tag: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { loadCurrencies } = this.props;\n    loadCurrencies();\n  }\n\n  handleChange(event) {\n    const { target } = event;\n    const { name, value } = target;\n    this.setState(\n      {\n        [name]: value,\n      },\n      this.buttonValidation,\n    );\n  }\n\n  resetState() {\n    this.setState({\n      expense: [],\n      value: '',\n      description: '',\n      method: '',\n      currency: '',\n      tag: '',\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { expenses, addExpenses, loadCurrencies, exchangeRates } = this.props;\n    const { value, description, method, currency, tag } = this.state;\n    await loadCurrencies();\n    console.log(exchangeRates);\n    // const { currencies } = this.props;\n    // const filteredCurrencies = currencies\n    //   .filter((filterCurrency) => filterCurrency.codein != \"BRLT\")\n    //   .sort();\n    this.setState({\n      expense: {\n        id: expenses.length,\n        value,\n        currency,\n        description,\n        method,\n        tag,\n        exchangeRates,\n      },\n    });\n    const { expense } = this.state;\n    addExpenses(expense);\n    this.resetState();\n  }\n\n  render() {\n    const { currencies } = this.props;\n    const { value, description, currency, method, tag } = this.state;\n    return (\n      <div>\n        <form>\n          <label htmlFor=\"value\">\n            Valor da despesa\n            <div>\n              <input\n                name=\"value\"\n                data-testid=\"value-input\"\n                placeholder=\"Digite seu despesa\"\n                id=\"value\"\n                type=\"text\"\n                value={ value }\n                onChange={ this.handleChange }\n              />\n            </div>\n          </label>\n          {' '}\n          <label htmlFor=\"description\">\n            O que é?\n            <div>\n              <input\n                name=\"description\"\n                data-testid=\"description-input\"\n                placeholder=\"Descrição da despesa\"\n                id=\"description\"\n                type=\"text\"\n                value={ description }\n                onChange={ this.handleChange }\n              />\n            </div>\n          </label>\n          {' '}\n          <label htmlFor=\"currency-input\" data-testid=\"currency-input-label\">\n            Sigla\n            <select\n              style={ { marginLeft: 10 } }\n              name=\"currency\"\n              onChange={ this.handleChange }\n              id=\"currency-input\"\n              data-testid=\"currency-input\"\n              value={ currency }\n            >\n              {currencies\n                .filter((filterCurrency) => filterCurrency.codein !== 'BRLT')\n                .map((currency, index) => (\n                  <option\n                    key={ index }\n                    value={ currency.code }\n                    data-testid={ currency.code }\n                  >\n                    {currency.code}\n                  </option>\n                ))}\n            </select>\n          </label>\n          <label htmlFor=\"method-input\" data-testid=\"method-input-label\">\n            Forma de pagamento\n            <select\n              style={ { marginLeft: 10 } }\n              name=\"method\"\n              onChange={ this.handleChange }\n              id=\"method-input\"\n              data-testid=\"method-input\"\n              value={ method }\n            >\n              <option value=\"Dinheiro\" data-testid=\"method-option\">\n                Dinheiro\n              </option>\n              <option value=\"Cartão de crédito\" data-testid=\"method-option\">\n                Cartão de crédito\n              </option>\n              <option value=\"Cartão de débito\" data-testid=\"method-option\">\n                Cartão de débito\n              </option>\n            </select>\n          </label>\n          <label htmlFor=\"tag-input\" data-testid=\"tag-input-label\">\n            Categoria\n            <select\n              style={ { marginLeft: 10 } }\n              name=\"tag\"\n              onChange={ this.handleChange }\n              id=\"tag-input\"\n              data-testid=\"tag-input\"\n              value={ tag }\n            >\n              <option value=\"Alimentação\" data-testid=\"tag-option\">\n                Alimentação\n              </option>\n              <option value=\"Lazer\" data-testid=\"tag-option\">\n                Lazer\n              </option>\n              <option value=\"Trabalho\" data-testid=\"tag-option\">\n                Trabalho\n              </option>\n              <option value=\"Transporte\" data-testid=\"tag-option\">\n                Transporte\n              </option>\n              <option value=\"Saúde\" data-testid=\"tag-option\">\n                Saúde\n              </option>\n            </select>\n          </label>\n          <button type=\"button\" onClick={ this.handleSubmit }>\n            Adicionar despesa\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  exchangeRates: state.wallet.exchangeRates,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadCurrencies: () => dispatch(actions.fetchCurrencies()),\n  addExpenses: (expense) => dispatch(actions.addExpenses(expense)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n\nExpenseForm.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addExpenses: PropTypes.func.isRequired,\n  loadCurrencies: PropTypes.func.isRequired,\n  exchangeRates: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\n// ExpensesForm.propTypes = {\n//   arrayCurrencyFiltered: PropTypes.arrayOf(PropTypes.string).isRequired,\n//   handlerChange: PropTypes.func.isRequired,\n//   handlerSubmit: PropTypes.func.isRequired,\n//   state: PropTypes.shape({\n//     expense: PropTypes.shape({\n//       value: PropTypes.number,\n//       description: PropTypes.string,\n//       currency: PropTypes.string,\n//       method: PropTypes.string,\n//       tag: PropTypes.string,\n//     }).isRequired,\n//   }).isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}